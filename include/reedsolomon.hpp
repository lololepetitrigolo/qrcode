#ifndef REEDSOLOMON_HPP
#define REEDSOLOMON_HPP

#include <cassert>
#include <cstdint>
#include <vector>

using std::vector;

enum ERROR_CORRECTION_LEVEL { L = 1, M = 0, Q = 3, H = 2 };

const int8_t ECC_CODEWORDS_PER_BLOCK[4][41] = {
    {-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22,
     24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28,
     28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28}, // Medium
    {-1, 7,  10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26,
     30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30,
     30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30}, // Low
    {-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22,
     24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30,
     30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30}, // High
    {-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24,
     20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30,
     30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30}, // Quartile
};

const int8_t NUM_ERROR_CORRECTION_BLOCKS[4][41] = {
    {-1, 1,  1,  1,  2,  2,  4,  4,  4,  5,  5,  5,  8,  9,
     9,  10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25,
     26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49}, // Medium
    {-1, 1,  1,  1,  1,  1,  2,  2,  2,  2,  4,  4,  4,  4,
     4,  6,  6,  6,  6,  7,  8,  8,  9,  9,  10, 12, 12, 12,
     13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25}, // Low
    {-1, 1,  1,  2,  4,  4,  4,  5,  6,  8,  8,  11, 11, 16,
     16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40,
     42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81}, // High
    {-1, 1,  1,  2,  2,  4,  4,  6,  6,  8,  8,  8,  10, 12,
     16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34,
     35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68}, // Quartile
};

vector<uint8_t>
addEccAndInterleave(vector<uint8_t> &data, uint8_t version,
                    ERROR_CORRECTION_LEVEL errorCorrectionLevel);

#endif // REEDSOLOMON_HPP
